<?xml version="1.0" encoding="UTF-8"?>
<idea-plugin>
    <id>com.christianhelle.apiclientcodegen</id>
    <name>REST API Client Code Generator</name>
    <vendor url="https://github.com/christianhelle/apiclientcodegen">Christian Resma Helle</vendor>
    <description><![CDATA[
        <h2>üöÄ REST API Client Code Generator</h2>
        
        <p><strong>Streamline your API integration workflow</strong> by automatically generating type-safe, production-ready REST API clients directly from OpenAPI/Swagger specifications. This plugin brings the power of industry-leading code generators right into your JetBrains IDE.</p>
        
        <h3>‚ú® Key Features</h3>
        <ul>
            <li><strong>Multiple Language Support:</strong> Generate C# and TypeScript clients with various framework options</li>
            <li><strong>Industry-Standard Generators:</strong> Choose from NSwag, Refitter, OpenAPI Generator, Microsoft Kiota, Swagger Codegen CLI, and AutoRest</li>
            <li><strong>Seamless Integration:</strong> Right-click context menu on OpenAPI files (.json, .yaml, .yml) and Refitter settings files</li>
            <li><strong>Framework Flexibility:</strong> Support for Angular, React (Axios), Node.js, Refit, and more</li>
            <li><strong>Configuration Files:</strong> Generate from .refitter settings for advanced customization</li>
        </ul>
        
        <h3>üõ†Ô∏è Supported Generators</h3>
        <p><strong>C# Clients:</strong></p>
        <ul>
            <li><strong>NSwag</strong> - Feature-rich with extensive customization options</li>
            <li><strong>Refitter</strong> - Generate Refit interfaces for reactive HTTP clients</li>
            <li><strong>OpenAPI Generator</strong> - Industry-standard with broad language support</li>
            <li><strong>Microsoft Kiota</strong> - Microsoft's modern API client generator</li>
            <li><strong>Swagger Codegen CLI</strong> - Traditional and reliable option</li>
            <li><strong>AutoRest</strong> - Microsoft's legacy generator (preview)</li>
        </ul>
        
        <p><strong>TypeScript Clients:</strong></p>
        <ul>
            <li>Angular, Aurelia, Axios, Fetch API</li>
            <li>Inversify, jQuery, NestJS, Node.js</li>
            <li>Redux Query, RxJS</li>
        </ul>
        
        <h3>‚ö° Quick Start</h3>
        <ol>
            <li>Install the <strong>rapicgen</strong> .NET tool (guidance provided if missing)</li>
            <li>Right-click any OpenAPI specification file in your project</li>
            <li>Choose your preferred language and generator</li>
            <li>Specify namespace/output folder when prompted</li>
            <li>Generated client code is ready to use!</li>
        </ol>
        
        <h3>üìã Requirements</h3>
        <ul>
            <li>.NET 8.0 SDK</li>
            <li>Java 17+ Runtime</li>
            <li>Node.js + NPM</li>
        </ul>
        
        <p><em>Part of the comprehensive REST API Client Code Generator suite, trusted by thousands of developers across Visual Studio, VS Code, and JetBrains IDEs.</em></p>
        
        <p>üîó <a href="https://github.com/christianhelle/apiclientcodegen">GitHub Repository</a> | <a href="https://marketplace.visualstudio.com/items?itemName=ChristianResmaHelle.ApiClientCodeGenerator2022">VS Extension</a> | <a href="https://marketplace.visualstudio.com/items?itemName=ChristianResmaHelle.apiclientcodegen">VS Code Extension</a></p>
    ]]></description>
    <version>${pluginVersion}</version>
    <idea-version since-build="${pluginSinceBuild}" until-build="${pluginUntilBuild}"/>
    <depends>com.intellij.modules.platform</depends>
    <actions>
        <group id="ApiClientCodeGen.Group" text="REST API Client Code Generator" popup="true">
            <add-to-group group-id="ProjectViewPopupMenu" anchor="last"/>
            <group id="ApiClientCodeGen.CSharpGroup" text="C#" popup="true">
                <action id="ApiClientCodeGen.CSharp.NSwag" class="com.christianhelle.apiclientcodegen.actions.CSharpGeneratorNSwagAction" text="NSwag" description="Generate C# client with NSwag"/>
                <action id="ApiClientCodeGen.CSharp.Refitter" class="com.christianhelle.apiclientcodegen.actions.CSharpGeneratorRefitterAction" text="Refitter" description="Generate C# Refit interfaces with Refitter"/>
                <action id="ApiClientCodeGen.CSharp.OpenAPI" class="com.christianhelle.apiclientcodegen.actions.CSharpGeneratorOpenApiAction" text="OpenAPI Generator" description="Generate C# client with OpenAPI Generator"/>
                <action id="ApiClientCodeGen.CSharp.Kiota" class="com.christianhelle.apiclientcodegen.actions.CSharpGeneratorKiotaAction" text="Kiota" description="Generate C# client with Microsoft Kiota"/>
                <action id="ApiClientCodeGen.CSharp.Swagger" class="com.christianhelle.apiclientcodegen.actions.CSharpGeneratorSwaggerAction" text="Swagger Codegen CLI" description="Generate C# client with Swagger Codegen CLI"/>
                <action id="ApiClientCodeGen.CSharp.AutoRest" class="com.christianhelle.apiclientcodegen.actions.CSharpGeneratorAutoRestAction" text="AutoRest" description="Generate C# client with AutoRest"/>
            </group>
            <group id="ApiClientCodeGen.TypeScriptGroup" text="TypeScript" popup="true">
                <action id="ApiClientCodeGen.TS.Angular" class="com.christianhelle.apiclientcodegen.actions.TypeScriptGeneratorAngularAction" text="Angular" description="Generate Angular TypeScript client"/>
                <action id="ApiClientCodeGen.TS.Aurelia" class="com.christianhelle.apiclientcodegen.actions.TypeScriptGeneratorAureliaAction" text="Aurelia" description="Generate Aurelia TypeScript client"/>
                <action id="ApiClientCodeGen.TS.Axios" class="com.christianhelle.apiclientcodegen.actions.TypeScriptGeneratorAxiosAction" text="Axios" description="Generate Axios TypeScript client"/>
                <action id="ApiClientCodeGen.TS.Fetch" class="com.christianhelle.apiclientcodegen.actions.TypeScriptGeneratorFetchAction" text="Fetch" description="Generate Fetch TypeScript client"/>
                <action id="ApiClientCodeGen.TS.Inversify" class="com.christianhelle.apiclientcodegen.actions.TypeScriptGeneratorInversifyAction" text="Inversify" description="Generate Inversify TypeScript client"/>
                <action id="ApiClientCodeGen.TS.JQuery" class="com.christianhelle.apiclientcodegen.actions.TypeScriptGeneratorJQueryAction" text="jQuery" description="Generate jQuery TypeScript client"/>
                <action id="ApiClientCodeGen.TS.NestJS" class="com.christianhelle.apiclientcodegen.actions.TypeScriptGeneratorNestJSAction" text="NestJS" description="Generate NestJS TypeScript client"/>
                <action id="ApiClientCodeGen.TS.Node" class="com.christianhelle.apiclientcodegen.actions.TypeScriptGeneratorNodeAction" text="Node" description="Generate Node TypeScript client"/>
                <action id="ApiClientCodeGen.TS.ReduxQuery" class="com.christianhelle.apiclientcodegen.actions.TypeScriptGeneratorReduxQueryAction" text="Redux Query" description="Generate Redux Query TypeScript client"/>
                <action id="ApiClientCodeGen.TS.Rxjs" class="com.christianhelle.apiclientcodegen.actions.TypeScriptGeneratorRxjsAction" text="RxJS" description="Generate RxJS TypeScript client"/>
            </group>
            <action id="ApiClientCodeGen.Refitter" class="com.christianhelle.apiclientcodegen.actions.GenerateRefitterAction" text="Generate Refitter Output" description="Generate Refit interfaces from .refitter file"/>
        </group>
    </actions>
</idea-plugin>
