{
  "runtime": "Default",
  "defaultVariables": null,
  "swaggerGenerator": {
    "swaggerDocument": {
      "json": "{\r\n  \"swagger\": \"2.0\",\r\n  \"info\": {\r\n    \"description\": \"This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.\",\r\n    \"version\": \"1.0.0\",\r\n    \"title\": \"Swagger Petstore\",\r\n    \"termsOfService\": \"http://swagger.io/terms/\",\r\n    \"contact\": {\r\n      \"email\": \"apiteam@swagger.io\"\r\n    },\r\n    \"license\": {\r\n      \"name\": \"Apache 2.0\",\r\n      \"url\": \"http://www.apache.org/licenses/LICENSE-2.0.html\"\r\n    }\r\n  },\r\n  \"host\": \"petstore.swagger.io\",\r\n  \"basePath\": \"/v2\",\r\n  \"tags\": [\r\n    {\r\n      \"name\": \"pet\",\r\n      \"description\": \"Everything about your Pets\",\r\n      \"externalDocs\": {\r\n        \"description\": \"Find out more\",\r\n        \"url\": \"http://swagger.io\"\r\n      }\r\n    },\r\n    {\r\n      \"name\": \"store\",\r\n      \"description\": \"Access to Petstore orders\"\r\n    },\r\n    {\r\n      \"name\": \"user\",\r\n      \"description\": \"Operations about user\",\r\n      \"externalDocs\": {\r\n        \"description\": \"Find out more about our store\",\r\n        \"url\": \"http://swagger.io\"\r\n      }\r\n    }\r\n  ],\r\n  \"schemes\": [\r\n    \"https\",\r\n    \"http\"\r\n  ],\r\n  \"paths\": {\r\n    \"/pet\": {\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"pet\"\r\n        ],\r\n        \"summary\": \"Add a new pet to the store\",\r\n        \"description\": \"\",\r\n        \"operationId\": \"addPet\",\r\n        \"consumes\": [\r\n          \"application/json\",\r\n          \"application/xml\"\r\n        ],\r\n        \"produces\": [\r\n          \"application/xml\",\r\n          \"application/json\"\r\n        ],\r\n        \"parameters\": [\r\n          {\r\n            \"in\": \"body\",\r\n            \"name\": \"body\",\r\n            \"description\": \"Pet object that needs to be added to the store\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"$ref\": \"#/definitions/Pet\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"405\": {\r\n            \"description\": \"Invalid input\"\r\n          }\r\n        },\r\n        \"security\": [\r\n          {\r\n            \"petstore_auth\": [\r\n              \"write:pets\",\r\n              \"read:pets\"\r\n            ]\r\n          }\r\n        ]\r\n      },\r\n      \"put\": {\r\n        \"tags\": [\r\n          \"pet\"\r\n        ],\r\n        \"summary\": \"Update an existing pet\",\r\n        \"description\": \"\",\r\n        \"operationId\": \"updatePet\",\r\n        \"consumes\": [\r\n          \"application/json\",\r\n          \"application/xml\"\r\n        ],\r\n        \"produces\": [\r\n          \"application/xml\",\r\n          \"application/json\"\r\n        ],\r\n        \"parameters\": [\r\n          {\r\n            \"in\": \"body\",\r\n            \"name\": \"body\",\r\n            \"description\": \"Pet object that needs to be added to the store\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"$ref\": \"#/definitions/Pet\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"400\": {\r\n            \"description\": \"Invalid ID supplied\"\r\n          },\r\n          \"404\": {\r\n            \"description\": \"Pet not found\"\r\n          },\r\n          \"405\": {\r\n            \"description\": \"Validation exception\"\r\n          }\r\n        },\r\n        \"security\": [\r\n          {\r\n            \"petstore_auth\": [\r\n              \"write:pets\",\r\n              \"read:pets\"\r\n            ]\r\n          }\r\n        ]\r\n      }\r\n    },\r\n    \"/pet/findByStatus\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"pet\"\r\n        ],\r\n        \"summary\": \"Finds Pets by status\",\r\n        \"description\": \"Multiple status values can be provided with comma separated strings\",\r\n        \"operationId\": \"findPetsByStatus\",\r\n        \"produces\": [\r\n          \"application/xml\",\r\n          \"application/json\"\r\n        ],\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"status\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Status values that need to be considered for filter\",\r\n            \"required\": true,\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"type\": \"string\",\r\n              \"enum\": [\r\n                \"available\",\r\n                \"pending\",\r\n                \"sold\"\r\n              ],\r\n              \"default\": \"available\"\r\n            },\r\n            \"collectionFormat\": \"multi\"\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"successful operation\",\r\n            \"schema\": {\r\n              \"type\": \"array\",\r\n              \"items\": {\r\n                \"$ref\": \"#/definitions/Pet\"\r\n              }\r\n            }\r\n          },\r\n          \"400\": {\r\n            \"description\": \"Invalid status value\"\r\n          }\r\n        },\r\n        \"security\": [\r\n          {\r\n            \"petstore_auth\": [\r\n              \"write:pets\",\r\n              \"read:pets\"\r\n            ]\r\n          }\r\n        ]\r\n      }\r\n    },\r\n    \"/pet/findByTags\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"pet\"\r\n        ],\r\n        \"summary\": \"Finds Pets by tags\",\r\n        \"description\": \"Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.\",\r\n        \"operationId\": \"findPetsByTags\",\r\n        \"produces\": [\r\n          \"application/xml\",\r\n          \"application/json\"\r\n        ],\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"tags\",\r\n            \"in\": \"query\",\r\n            \"description\": \"Tags to filter by\",\r\n            \"required\": true,\r\n            \"type\": \"array\",\r\n            \"items\": {\r\n              \"type\": \"string\"\r\n            },\r\n            \"collectionFormat\": \"multi\"\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"successful operation\",\r\n            \"schema\": {\r\n              \"type\": \"array\",\r\n              \"items\": {\r\n                \"$ref\": \"#/definitions/Pet\"\r\n              }\r\n            }\r\n          },\r\n          \"400\": {\r\n            \"description\": \"Invalid tag value\"\r\n          }\r\n        },\r\n        \"security\": [\r\n          {\r\n            \"petstore_auth\": [\r\n              \"write:pets\",\r\n              \"read:pets\"\r\n            ]\r\n          }\r\n        ],\r\n        \"deprecated\": true\r\n      }\r\n    },\r\n    \"/pet/{petId}\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"pet\"\r\n        ],\r\n        \"summary\": \"Find pet by ID\",\r\n        \"description\": \"Returns a single pet\",\r\n        \"operationId\": \"getPetById\",\r\n        \"produces\": [\r\n          \"application/xml\",\r\n          \"application/json\"\r\n        ],\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"petId\",\r\n            \"in\": \"path\",\r\n            \"description\": \"ID of pet to return\",\r\n            \"required\": true,\r\n            \"type\": \"integer\",\r\n            \"format\": \"int64\"\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"successful operation\",\r\n            \"schema\": {\r\n              \"$ref\": \"#/definitions/Pet\"\r\n            }\r\n          },\r\n          \"400\": {\r\n            \"description\": \"Invalid ID supplied\"\r\n          },\r\n          \"404\": {\r\n            \"description\": \"Pet not found\"\r\n          }\r\n        },\r\n        \"security\": [\r\n          {\r\n            \"api_key\": []\r\n          }\r\n        ]\r\n      },\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"pet\"\r\n        ],\r\n        \"summary\": \"Updates a pet in the store with form data\",\r\n        \"description\": \"\",\r\n        \"operationId\": \"updatePetWithForm\",\r\n        \"consumes\": [\r\n          \"application/x-www-form-urlencoded\"\r\n        ],\r\n        \"produces\": [\r\n          \"application/xml\",\r\n          \"application/json\"\r\n        ],\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"petId\",\r\n            \"in\": \"path\",\r\n            \"description\": \"ID of pet that needs to be updated\",\r\n            \"required\": true,\r\n            \"type\": \"integer\",\r\n            \"format\": \"int64\"\r\n          },\r\n          {\r\n            \"name\": \"name\",\r\n            \"in\": \"formData\",\r\n            \"description\": \"Updated name of the pet\",\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"name\": \"status\",\r\n            \"in\": \"formData\",\r\n            \"description\": \"Updated status of the pet\",\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"405\": {\r\n            \"description\": \"Invalid input\"\r\n          }\r\n        },\r\n        \"security\": [\r\n          {\r\n            \"petstore_auth\": [\r\n              \"write:pets\",\r\n              \"read:pets\"\r\n            ]\r\n          }\r\n        ]\r\n      },\r\n      \"delete\": {\r\n        \"tags\": [\r\n          \"pet\"\r\n        ],\r\n        \"summary\": \"Deletes a pet\",\r\n        \"description\": \"\",\r\n        \"operationId\": \"deletePet\",\r\n        \"produces\": [\r\n          \"application/xml\",\r\n          \"application/json\"\r\n        ],\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"api_key\",\r\n            \"in\": \"header\",\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"name\": \"petId\",\r\n            \"in\": \"path\",\r\n            \"description\": \"Pet id to delete\",\r\n            \"required\": true,\r\n            \"type\": \"integer\",\r\n            \"format\": \"int64\"\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"400\": {\r\n            \"description\": \"Invalid ID supplied\"\r\n          },\r\n          \"404\": {\r\n            \"description\": \"Pet not found\"\r\n          }\r\n        },\r\n        \"security\": [\r\n          {\r\n            \"petstore_auth\": [\r\n              \"write:pets\",\r\n              \"read:pets\"\r\n            ]\r\n          }\r\n        ]\r\n      }\r\n    },\r\n    \"/pet/{petId}/uploadImage\": {\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"pet\"\r\n        ],\r\n        \"summary\": \"uploads an image\",\r\n        \"description\": \"\",\r\n        \"operationId\": \"uploadFile\",\r\n        \"consumes\": [\r\n          \"multipart/form-data\"\r\n        ],\r\n        \"produces\": [\r\n          \"application/json\"\r\n        ],\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"petId\",\r\n            \"in\": \"path\",\r\n            \"description\": \"ID of pet to update\",\r\n            \"required\": true,\r\n            \"type\": \"integer\",\r\n            \"format\": \"int64\"\r\n          },\r\n          {\r\n            \"name\": \"additionalMetadata\",\r\n            \"in\": \"formData\",\r\n            \"description\": \"Additional data to pass to server\",\r\n            \"required\": false,\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"name\": \"file\",\r\n            \"in\": \"formData\",\r\n            \"description\": \"file to upload\",\r\n            \"required\": false,\r\n            \"type\": \"file\"\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"successful operation\",\r\n            \"schema\": {\r\n              \"$ref\": \"#/definitions/ApiResponse\"\r\n            }\r\n          }\r\n        },\r\n        \"security\": [\r\n          {\r\n            \"petstore_auth\": [\r\n              \"write:pets\",\r\n              \"read:pets\"\r\n            ]\r\n          }\r\n        ]\r\n      }\r\n    },\r\n    \"/store/inventory\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"store\"\r\n        ],\r\n        \"summary\": \"Returns pet inventories by status\",\r\n        \"description\": \"Returns a map of status codes to quantities\",\r\n        \"operationId\": \"getInventory\",\r\n        \"produces\": [\r\n          \"application/json\"\r\n        ],\r\n        \"parameters\": [],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"successful operation\",\r\n            \"schema\": {\r\n              \"type\": \"object\",\r\n              \"additionalProperties\": {\r\n                \"type\": \"integer\",\r\n                \"format\": \"int32\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"security\": [\r\n          {\r\n            \"api_key\": []\r\n          }\r\n        ]\r\n      }\r\n    },\r\n    \"/store/order\": {\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"store\"\r\n        ],\r\n        \"summary\": \"Place an order for a pet\",\r\n        \"description\": \"\",\r\n        \"operationId\": \"placeOrder\",\r\n        \"produces\": [\r\n          \"application/xml\",\r\n          \"application/json\"\r\n        ],\r\n        \"parameters\": [\r\n          {\r\n            \"in\": \"body\",\r\n            \"name\": \"body\",\r\n            \"description\": \"order placed for purchasing the pet\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"$ref\": \"#/definitions/Order\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"successful operation\",\r\n            \"schema\": {\r\n              \"$ref\": \"#/definitions/Order\"\r\n            }\r\n          },\r\n          \"400\": {\r\n            \"description\": \"Invalid Order\"\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/store/order/{orderId}\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"store\"\r\n        ],\r\n        \"summary\": \"Find purchase order by ID\",\r\n        \"description\": \"For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions\",\r\n        \"operationId\": \"getOrderById\",\r\n        \"produces\": [\r\n          \"application/xml\",\r\n          \"application/json\"\r\n        ],\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"orderId\",\r\n            \"in\": \"path\",\r\n            \"description\": \"ID of pet that needs to be fetched\",\r\n            \"required\": true,\r\n            \"type\": \"integer\",\r\n            \"maximum\": 10.0,\r\n            \"minimum\": 1.0,\r\n            \"format\": \"int64\"\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"successful operation\",\r\n            \"schema\": {\r\n              \"$ref\": \"#/definitions/Order\"\r\n            }\r\n          },\r\n          \"400\": {\r\n            \"description\": \"Invalid ID supplied\"\r\n          },\r\n          \"404\": {\r\n            \"description\": \"Order not found\"\r\n          }\r\n        }\r\n      },\r\n      \"delete\": {\r\n        \"tags\": [\r\n          \"store\"\r\n        ],\r\n        \"summary\": \"Delete purchase order by ID\",\r\n        \"description\": \"For valid response try integer IDs with positive integer value. Negative or non-integer values will generate API errors\",\r\n        \"operationId\": \"deleteOrder\",\r\n        \"produces\": [\r\n          \"application/xml\",\r\n          \"application/json\"\r\n        ],\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"orderId\",\r\n            \"in\": \"path\",\r\n            \"description\": \"ID of the order that needs to be deleted\",\r\n            \"required\": true,\r\n            \"type\": \"integer\",\r\n            \"minimum\": 1.0,\r\n            \"format\": \"int64\"\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"400\": {\r\n            \"description\": \"Invalid ID supplied\"\r\n          },\r\n          \"404\": {\r\n            \"description\": \"Order not found\"\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/user\": {\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"user\"\r\n        ],\r\n        \"summary\": \"Create user\",\r\n        \"description\": \"This can only be done by the logged in user.\",\r\n        \"operationId\": \"createUser\",\r\n        \"produces\": [\r\n          \"application/xml\",\r\n          \"application/json\"\r\n        ],\r\n        \"parameters\": [\r\n          {\r\n            \"in\": \"body\",\r\n            \"name\": \"body\",\r\n            \"description\": \"Created user object\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"$ref\": \"#/definitions/User\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"default\": {\r\n            \"description\": \"successful operation\"\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/user/createWithArray\": {\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"user\"\r\n        ],\r\n        \"summary\": \"Creates list of users with given input array\",\r\n        \"description\": \"\",\r\n        \"operationId\": \"createUsersWithArrayInput\",\r\n        \"produces\": [\r\n          \"application/xml\",\r\n          \"application/json\"\r\n        ],\r\n        \"parameters\": [\r\n          {\r\n            \"in\": \"body\",\r\n            \"name\": \"body\",\r\n            \"description\": \"List of user object\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"array\",\r\n              \"items\": {\r\n                \"$ref\": \"#/definitions/User\"\r\n              }\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"default\": {\r\n            \"description\": \"successful operation\"\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/user/createWithList\": {\r\n      \"post\": {\r\n        \"tags\": [\r\n          \"user\"\r\n        ],\r\n        \"summary\": \"Creates list of users with given input array\",\r\n        \"description\": \"\",\r\n        \"operationId\": \"createUsersWithListInput\",\r\n        \"produces\": [\r\n          \"application/xml\",\r\n          \"application/json\"\r\n        ],\r\n        \"parameters\": [\r\n          {\r\n            \"in\": \"body\",\r\n            \"name\": \"body\",\r\n            \"description\": \"List of user object\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"type\": \"array\",\r\n              \"items\": {\r\n                \"$ref\": \"#/definitions/User\"\r\n              }\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"default\": {\r\n            \"description\": \"successful operation\"\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/user/login\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"user\"\r\n        ],\r\n        \"summary\": \"Logs user into the system\",\r\n        \"description\": \"\",\r\n        \"operationId\": \"loginUser\",\r\n        \"produces\": [\r\n          \"application/xml\",\r\n          \"application/json\"\r\n        ],\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"username\",\r\n            \"in\": \"query\",\r\n            \"description\": \"The user name for login\",\r\n            \"required\": true,\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"name\": \"password\",\r\n            \"in\": \"query\",\r\n            \"description\": \"The password for login in clear text\",\r\n            \"required\": true,\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"successful operation\",\r\n            \"schema\": {\r\n              \"type\": \"string\"\r\n            },\r\n            \"headers\": {\r\n              \"X-Rate-Limit\": {\r\n                \"type\": \"integer\",\r\n                \"format\": \"int32\",\r\n                \"description\": \"calls per hour allowed by the user\"\r\n              },\r\n              \"X-Expires-After\": {\r\n                \"type\": \"string\",\r\n                \"format\": \"date-time\",\r\n                \"description\": \"date in UTC when token expires\"\r\n              }\r\n            }\r\n          },\r\n          \"400\": {\r\n            \"description\": \"Invalid username/password supplied\"\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/user/logout\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"user\"\r\n        ],\r\n        \"summary\": \"Logs out current logged in user session\",\r\n        \"description\": \"\",\r\n        \"operationId\": \"logoutUser\",\r\n        \"produces\": [\r\n          \"application/xml\",\r\n          \"application/json\"\r\n        ],\r\n        \"parameters\": [],\r\n        \"responses\": {\r\n          \"default\": {\r\n            \"description\": \"successful operation\"\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/user/{username}\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"user\"\r\n        ],\r\n        \"summary\": \"Get user by user name\",\r\n        \"description\": \"\",\r\n        \"operationId\": \"getUserByName\",\r\n        \"produces\": [\r\n          \"application/xml\",\r\n          \"application/json\"\r\n        ],\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"username\",\r\n            \"in\": \"path\",\r\n            \"description\": \"The name that needs to be fetched. Use user1 for testing. \",\r\n            \"required\": true,\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"successful operation\",\r\n            \"schema\": {\r\n              \"$ref\": \"#/definitions/User\"\r\n            }\r\n          },\r\n          \"400\": {\r\n            \"description\": \"Invalid username supplied\"\r\n          },\r\n          \"404\": {\r\n            \"description\": \"User not found\"\r\n          }\r\n        }\r\n      },\r\n      \"put\": {\r\n        \"tags\": [\r\n          \"user\"\r\n        ],\r\n        \"summary\": \"Updated user\",\r\n        \"description\": \"This can only be done by the logged in user.\",\r\n        \"operationId\": \"updateUser\",\r\n        \"produces\": [\r\n          \"application/xml\",\r\n          \"application/json\"\r\n        ],\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"username\",\r\n            \"in\": \"path\",\r\n            \"description\": \"name that need to be updated\",\r\n            \"required\": true,\r\n            \"type\": \"string\"\r\n          },\r\n          {\r\n            \"in\": \"body\",\r\n            \"name\": \"body\",\r\n            \"description\": \"Updated user object\",\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"$ref\": \"#/definitions/User\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"400\": {\r\n            \"description\": \"Invalid user supplied\"\r\n          },\r\n          \"404\": {\r\n            \"description\": \"User not found\"\r\n          }\r\n        }\r\n      },\r\n      \"delete\": {\r\n        \"tags\": [\r\n          \"user\"\r\n        ],\r\n        \"summary\": \"Delete user\",\r\n        \"description\": \"This can only be done by the logged in user.\",\r\n        \"operationId\": \"deleteUser\",\r\n        \"produces\": [\r\n          \"application/xml\",\r\n          \"application/json\"\r\n        ],\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"username\",\r\n            \"in\": \"path\",\r\n            \"description\": \"The name that needs to be deleted\",\r\n            \"required\": true,\r\n            \"type\": \"string\"\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"400\": {\r\n            \"description\": \"Invalid username supplied\"\r\n          },\r\n          \"404\": {\r\n            \"description\": \"User not found\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  },\r\n  \"securityDefinitions\": {\r\n    \"petstore_auth\": {\r\n      \"type\": \"oauth2\",\r\n      \"authorizationUrl\": \"https://petstore.swagger.io/oauth/authorize\",\r\n      \"flow\": \"implicit\",\r\n      \"scopes\": {\r\n        \"write:pets\": \"modify pets in your account\",\r\n        \"read:pets\": \"read your pets\"\r\n      }\r\n    },\r\n    \"api_key\": {\r\n      \"type\": \"apiKey\",\r\n      \"name\": \"api_key\",\r\n      \"in\": \"header\"\r\n    }\r\n  },\r\n  \"definitions\": {\r\n    \"Order\": {\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"id\": {\r\n          \"type\": \"integer\",\r\n          \"format\": \"int64\"\r\n        },\r\n        \"petId\": {\r\n          \"type\": \"integer\",\r\n          \"format\": \"int64\"\r\n        },\r\n        \"quantity\": {\r\n          \"type\": \"integer\",\r\n          \"format\": \"int32\"\r\n        },\r\n        \"shipDate\": {\r\n          \"type\": \"string\",\r\n          \"format\": \"date-time\"\r\n        },\r\n        \"status\": {\r\n          \"type\": \"string\",\r\n          \"description\": \"Order Status\",\r\n          \"enum\": [\r\n            \"placed\",\r\n            \"approved\",\r\n            \"delivered\"\r\n          ]\r\n        },\r\n        \"complete\": {\r\n          \"type\": \"boolean\",\r\n          \"default\": false\r\n        }\r\n      },\r\n      \"xml\": {\r\n        \"name\": \"Order\"\r\n      }\r\n    },\r\n    \"User\": {\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"id\": {\r\n          \"type\": \"integer\",\r\n          \"format\": \"int64\"\r\n        },\r\n        \"username\": {\r\n          \"type\": \"string\"\r\n        },\r\n        \"firstName\": {\r\n          \"type\": \"string\"\r\n        },\r\n        \"lastName\": {\r\n          \"type\": \"string\"\r\n        },\r\n        \"email\": {\r\n          \"type\": \"string\"\r\n        },\r\n        \"password\": {\r\n          \"type\": \"string\"\r\n        },\r\n        \"phone\": {\r\n          \"type\": \"string\"\r\n        },\r\n        \"userStatus\": {\r\n          \"type\": \"integer\",\r\n          \"format\": \"int32\",\r\n          \"description\": \"User Status\"\r\n        }\r\n      },\r\n      \"xml\": {\r\n        \"name\": \"User\"\r\n      }\r\n    },\r\n    \"Category\": {\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"id\": {\r\n          \"type\": \"integer\",\r\n          \"format\": \"int64\"\r\n        },\r\n        \"name\": {\r\n          \"type\": \"string\"\r\n        }\r\n      },\r\n      \"xml\": {\r\n        \"name\": \"Category\"\r\n      }\r\n    },\r\n    \"Tag\": {\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"id\": {\r\n          \"type\": \"integer\",\r\n          \"format\": \"int64\"\r\n        },\r\n        \"name\": {\r\n          \"type\": \"string\"\r\n        }\r\n      },\r\n      \"xml\": {\r\n        \"name\": \"Tag\"\r\n      }\r\n    },\r\n    \"Pet\": {\r\n      \"type\": \"object\",\r\n      \"required\": [\r\n        \"name\",\r\n        \"photoUrls\"\r\n      ],\r\n      \"properties\": {\r\n        \"id\": {\r\n          \"type\": \"integer\",\r\n          \"format\": \"int64\"\r\n        },\r\n        \"category\": {\r\n          \"$ref\": \"#/definitions/Category\"\r\n        },\r\n        \"name\": {\r\n          \"type\": \"string\",\r\n          \"example\": \"doggie\"\r\n        },\r\n        \"photoUrls\": {\r\n          \"type\": \"array\",\r\n          \"xml\": {\r\n            \"name\": \"photoUrl\",\r\n            \"wrapped\": true\r\n          },\r\n          \"items\": {\r\n            \"type\": \"string\"\r\n          }\r\n        },\r\n        \"tags\": {\r\n          \"type\": \"array\",\r\n          \"xml\": {\r\n            \"name\": \"tag\",\r\n            \"wrapped\": true\r\n          },\r\n          \"items\": {\r\n            \"$ref\": \"#/definitions/Tag\"\r\n          }\r\n        },\r\n        \"status\": {\r\n          \"type\": \"string\",\r\n          \"description\": \"pet status in the store\",\r\n          \"enum\": [\r\n            \"available\",\r\n            \"pending\",\r\n            \"sold\"\r\n          ]\r\n        }\r\n      },\r\n      \"xml\": {\r\n        \"name\": \"Pet\"\r\n      }\r\n    },\r\n    \"ApiResponse\": {\r\n      \"type\": \"object\",\r\n      \"properties\": {\r\n        \"code\": {\r\n          \"type\": \"integer\",\r\n          \"format\": \"int32\"\r\n        },\r\n        \"type\": {\r\n          \"type\": \"string\"\r\n        },\r\n        \"message\": {\r\n          \"type\": \"string\"\r\n        }\r\n      }\r\n    }\r\n  },\r\n  \"externalDocs\": {\r\n    \"description\": \"Find out more about Swagger\",\r\n    \"url\": \"http://swagger.io\"\r\n  }\r\n}",
      "url": "https://petstore.swagger.io/v2/swagger.json",
      "output": null,
      "newLineBehavior": "Auto"
    }
  },
  "codeGenerators": {
    "openApiToCSharpClient": {
      "clientBaseClass": null,
      "configurationClass": null,
      "generateClientClasses": true,
      "generateClientInterfaces": true,
      "clientBaseInterface": null,
      "injectHttpClient": true,
      "disposeHttpClient": true,
      "protectedMethods": [],
      "generateExceptionClasses": true,
      "exceptionClass": "SwaggerException",
      "wrapDtoExceptions": true,
      "useHttpClientCreationMethod": false,
      "httpClientType": "System.Net.Http.HttpClient",
      "useHttpRequestMessageCreationMethod": false,
      "useBaseUrl": true,
      "generateBaseUrlProperty": true,
      "generateSyncMethods": false,
      "exposeJsonSerializerSettings": false,
      "clientClassAccessModifier": "public",
      "typeAccessModifier": "public",
      "generateContractsOutput": false,
      "contractsNamespace": "Rapicgen.IntegrationTests",
      "contractsOutputFilePath": null,
      "parameterDateTimeFormat": "s",
      "parameterDateFormat": "yyyy-MM-dd",
      "generateUpdateJsonSerializerSettingsMethod": true,
      "useRequestAndResponseSerializationSettings": false,
      "serializeTypeInformation": false,
      "queryNullValue": "",
      "className": "PetstoreClient",
      "operationGenerationMode": "MultipleClientsFromOperationId",
      "additionalNamespaceUsages": [],
      "additionalContractNamespaceUsages": [],
      "generateOptionalParameters": false,
      "generateJsonMethods": true,
      "enforceFlagEnums": false,
      "parameterArrayType": "System.Collections.Generic.IEnumerable",
      "parameterDictionaryType": "System.Collections.Generic.IDictionary",
      "responseArrayType": "System.Collections.Generic.List",
      "responseDictionaryType": "System.Collections.Generic.Dictionary",
      "wrapResponses": false,
      "wrapResponseMethods": [],
      "generateResponseClasses": true,
      "responseClass": "SwaggerResponse",
      "namespace": "Rapicgen.IntegrationTests",
      "requiredPropertiesMustBeDefined": true,
      "dateType": "System.DateTime",
      "jsonConverters": null,
      "anyType": "object",
      "dateTimeType": "System.DateTime",
      "timeType": "System.TimeSpan",
      "timeSpanType": "System.TimeSpan",
      "arrayType": "System.Collections.Generic.List",
      "arrayInstanceType": null,
      "dictionaryType": "System.Collections.Generic.Dictionary",
      "dictionaryInstanceType": null,
      "arrayBaseType": "System.Collections.Generic.List",
      "dictionaryBaseType": "System.Collections.Generic.Dictionary",
      "classStyle": "Inpc",
      "generateDefaultValues": true,
      "generateDataAnnotations": true,
      "excludedTypeNames": [],
      "excludedParameterNames": [],
      "handleReferences": false,
      "generateImmutableArrayProperties": false,
      "generateImmutableDictionaryProperties": false,
      "jsonSerializerSettingsTransformationMethod": null,
      "inlineNamedArrays": false,
      "inlineNamedDictionaries": false,
      "inlineNamedTuples": true,
      "inlineNamedAny": false,
      "generateDtoTypes": true,
      "generateOptionalPropertiesAsNullable": false,
      "generateNullableReferenceTypes": false,
      "templateDirectory": null,
      "typeNameGeneratorType": null,
      "propertyNameGeneratorType": null,
      "enumNameGeneratorType": null,
      "serviceHost": null,
      "serviceSchemes": null,
      "output": "PetstoreClient.cs",
      "newLineBehavior": "Auto"
    }
  }
}